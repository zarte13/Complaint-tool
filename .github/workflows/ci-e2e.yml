name: E2E CI (Playwright)

on:
  workflow_dispatch:

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      BASE_URL_BACKEND: http://127.0.0.1:8000
      BASE_URL_FRONTEND: http://127.0.0.1:3000
      ENV: dev
      JWT_SECRET: test-secret

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Frontend setup
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: complaint-system/frontend/package-lock.json

      - name: Install frontend deps
        working-directory: complaint-system/frontend
        run: npm ci

      # Backend setup
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('complaint-system/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install backend deps
        working-directory: complaint-system/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Start backend API
      - name: Launch backend
        working-directory: complaint-system/backend
        run: |
          nohup python -m uvicorn main:app --host 127.0.0.1 --port 8000 --log-level warning > ../backend.log 2>&1 &

      # Install Playwright browsers
      - name: Install Playwright
        working-directory: complaint-system/frontend
        run: npx playwright install --with-deps

      # Start frontend dev server
      - name: Launch frontend
        working-directory: complaint-system/frontend
        run: |
          nohup npm run dev -- --host --port 3000 > ../frontend.log 2>&1 &

      # Wait for services
      - name: Wait for services
        run: |
          echo "Waiting for backend ${BASE_URL_BACKEND}/health ..."
          for i in {1..60}; do
            if curl -sSf "${BASE_URL_BACKEND}/health" >/dev/null; then echo "Backend up"; ready_backend=1; break; fi; sleep 2;
          done
          if [ -z "${ready_backend}" ]; then
            echo "::error::Backend did not become ready"; exit 1;
          fi
          echo "Waiting for frontend ${BASE_URL_FRONTEND} ..."
          for i in {1..60}; do
            if curl -sSf "${BASE_URL_FRONTEND}" >/dev/null; then echo "Frontend up"; ready_frontend=1; break; fi; sleep 2;
          done
          if [ -z "${ready_frontend}" ]; then
            echo "::error::Frontend did not become ready"; exit 1;
          fi

      # Seed admin user for E2E
      - name: Seed admin user
        working-directory: complaint-system/backend
        run: |
          python scripts/create_user.py --username admin --password YourPass123 --role admin || true

      # Run Playwright tests
      - name: Run Playwright tests
        working-directory: complaint-system/frontend
        env:
          BASE_URL_BACKEND: ${{ env.BASE_URL_BACKEND }}
          BASE_URL_FRONTEND: ${{ env.BASE_URL_FRONTEND }}
        run: npx playwright test --reporter=line

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: complaint-system/frontend/playwright-report